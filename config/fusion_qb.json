{
  "name": "ddpm_fusion_reduced_qb_on_wv4",
  "info": "l1损失函数,就用最直接有效的模型",
  "phase": "val",
  // for diffusion model
  "fusion_phase": "train",
  // train or val
  "gpu_ids": [
    0
  ],
  "path": {
    //set the path
    "log": "logs",
    "tb_logger": "tb_logger",
    "results": "results",
    "checkpoint": "checkpoint",
    "resume_state": null,
    "pan2ms": "experiments/PAN2MS_WV4_230717_013140/checkpoint/I7168000_E1000",
    "ms2pan": "experiments/MS2PAN_WV4_230717_012154/checkpoint/I7168000_E1000"
    // "resume_state": "experiments/distributed_high_sr_ffhq_210901_121212/checkpoint/I830000_E32" //pretrain model or training state
  },
  "datasets": {
    "train": {
      "dataroot": "/data/qlt/h5/training_data/train_qb_data.h5",
      "batch_size": 32,
      "num_workers": 8,
      "use_shuffle": true,
      "data_len": -1
    },
    "val": {
      "dataroot": "/data/qlt/h5/test_data/QB/test_qb_data_RR.h5",
      "data_len": -1
    },
    "test": {
      "dataroot": "/data/qlt/h5/test_data/QB/test_qb_data_RR.h5",
      "data_len": -1
    }
  },
  "model": {
    "which_model_G": "easy",
    // use the ddpm or sr3 network structure
    "finetune_norm": false,
    "init_type": "orthogonal",
    "unet": {
      "in_channel": 4,
      "channel_multiplier": [
        //input channel
        32,
        64,
        128,
        256
      ]
    },
    "beta_schedule": {
      // use munual beta_schedule for acceleration
      "train": {
        "schedule": "cosine",
        "n_timestep": 1000
      },
      "val": {
        "schedule": "cosine",
        "n_timestep": 1000
      }
    },
    "diffusion": {
      "image_size": 256,
      "conditional": true,
      "loss_type": "l1"
    }
  },
  "model_fu": {
    "inner_channel": 32,
    "channel_multiplier": [
      //input channel
      32,
      64,
      128,
      256
    ],
    "spectral_num": 4,
    "feat_type": "enc",
    //Options: 'enc'/'dec'
    "t": [
      50
    ]
  },
  "train": {
    "n_epochs": 200,
    "val_freq": 20,
    "save_checkpoint_freq": 20,
    "print_freq": 1,
    "optimizer": {
      "lr": 3e-4
    }
  }
}



